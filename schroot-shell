#!/bin/sh -e
# vim:se sw=2 ts=2 sts=2 et ai tw=78:
# convenience script to use schroot
if [ "$(id -u)" != 0 ] && type xhost >/dev/null; then
  XHOST="xhost"
else
  XHOST=":"
fi
# For ease of customization, here are key parameters
DSH="$0"
USERNAME="osamu"
TYPE="${TYPE:-source}"
USAGE="${USAGE:-term}"
ARCH="${ARCH:-amd64}"
BASECHROOT="/srv/chroot" # enough disk space here
SCHROOT_PROFILE="${SCHROOT_PROFILE:-osamu}" # name for local customized /etc/schroot/chroot.d/desktop
URL="http://127.0.0.1:3142/deb.debian.org/debian"
_help() {
  echo "NAME"
  echo "    ${0##*/} - start a shell in chroot with current home data."
  echo
  echo "SYNOPSIS"
  echo "    ${0##*/} [|--init|--prep|--upgrade] [DIST]"
  echo
  echo "DESCRIPTION"
  echo "    This is modeled after *sbuild-shell* and *sbuild-update* commands."
  echo
  echo "    This normally starts persistent (source) chroot environment for the"
  echo "    DIST distribution and provides a shell prompt in the current console"
  echo "    terminal with access to the data in the current home directory."
  echo
  echo "    If DIST is unset, '\${DIST}' environment variable is used instead."
  echo "    If '\${DIST}' environment variable is also unset, 'unstable' is used."
  echo
  echo "    DIST can be 'unstable', 'testing', 'stable', 'oldstable', or 'oldoldstable'."
  echo "    DIST can be their shortforms, i.e., 'u', 't', 's', 'o', or 'oo'."
  echo
  echo "    If '--init' or '-i' is given as an option, this initializes schroot"
  echo "    environment for this command and optionally for sbuild."
  echo "      * '/srv/chroot/\${DIST}-amd64-sbuild' used by sbuild as a minimum system"
  echo "      * '/srv/chroot/\${DIST}-amd64-${USAGE}' used by this program to start"
  echo "        the terminal shell prompt as a source chroot of a loaded system"
  echo
  echo "    If '--prep' or '-p' is given as an option, this updates schroot"
  echo "    environment with basic extra packages normally needed for the console"
  echo "    terminal operations to '/srv/chroot/\${DIST}-amd64-${USAGE}'"
  echo
  echo "    If '--upgrade' or '-u' is given as an option, this updates schroot"
  echo "    environment of '/srv/chroot/\${DIST}-amd64-${USAGE}'"
  echo
  echo "    A customized schroot profile based on '/etc/schroot/desktop/*' needs"
  echo "    to be created.  Currently '/etc/schroot/${SCHROOT_PROFILE}/*' profile"
  echo "    is used.  This default profile can be changed to '/etc/schroot/foo/*'"
  echo "    by setting '\${SCHROOT_PROFILE}' environment variable to 'foo'."
  echo
}

_noxhost () {
  if [ "$XHOST" = "xhost" ]; then
    $XHOST -
    echo "I: closed xhost just to be sure"
  fi
}

_distsh () {
  $XHOST -
  echo "I: use ${TYPE}:${DIST}-${ARCH}-${USAGE}"
  $XHOST "+si:localuser:$USERNAME"
  echo "I: allow xhost only for the localuser"
  schroot -c "${TYPE}:${DIST}-${ARCH}-${USAGE}"
  echo "I: normal exit from schroot"
}

_su () {
  if [ "$(id -u)" != 0 ]; then
    echo "I: execute as root: $*"
    exec sudo --preserve-env=DIST,SCHROOT_PROFILE "$@"
  fi
}
_init () {
  echo "I: executing as '$(id -u -n)' ..."
  # create a minimum schroot for sbuild
  echo "I: setting up DIST=${DIST} for sbuild ..."
  DIRSCHROOT="${BASECHROOT}/${DIST}-${ARCH}-sbuild"
  if [ ! -e "${DIRSCHROOT}" ]; then
    sbuild-createchroot --include=eatmydata,ccache  "${DIST}" "${DIRSCHROOT}" "${URL}"
  else
    echo "W: ${DIRSCHROOT} exists so use it"
  fi
  # create additional chroot for use by terminal and X (No wayland?)
  # $ xhost +si:localuser:osamu ; schroot -c chroot:${DIRTERM}-?? ; xhost -
  echo "I: setting up DIST=${DIST} for term ..."
  DIRTERM="${BASECHROOT}/${DIST}-${ARCH}-term"
  if [ ! -e "${DIRTERM}" ]; then
    cp -a --reflink=always  "${DIRSCHROOT}"  "${DIRTERM}"
  else
    echo "W: ${DIRTERM} exists so use it"
  fi
  # create schroot data entry /etc/schroot/chroot.d/${DIST}-${ARCH}-term
  # while using schroot $SCHROOT_PROFILE with uniq filename
  # shellcheck disable=SC2086
  SCHROOTCONF="$(ls -1 /etc/schroot/chroot.d/${DIST}-${ARCH}-term-* 2>/dev/null)"
  if [ -z "$SCHROOTCONF" ]; then
    cat > "/etc/schroot/chroot.d/${DIST}-${ARCH}-term-$$" <<EOF
[${DIST}-${ARCH}-term]
description=Debian ${DIST} ${ARCH} chroot for terminal with shared data
groups=root,sbuild
root-groups=root,sbuild
source-groups=root,sbuild
source-root-groups=root,sbuild
profile=${SCHROOT_PROFILE}
type=directory
preserve-environment=true
directory=/srv/chroot/${DIST}-${ARCH}-term
union-type=overlay
command-prefix=eatmydata
EOF
  else
    echo "W: ${SCHROOTCONF} exists so use it"
  fi
}

_upgrade () {
  cat <<EOF | "$DSH" "$DIST"
# -udcar
apt-get update --yes
apt-get dist-upgrade --yes
apt-get clean --yes
apt-get autoclean --yes
apt-get autoremove --yes
EOF
}

# x11-xserver-util package is needed by xhost command
# xhost command is needed by gitk operation
_prep () {
  cat <<EOF | $DSH "$DIST"
if apt-get install --yes aptitude mc vim nano- devscripts gitk git sudo \
    locales-all imediff fzf rlwrap eatmydata ccache x11-xserver-utils ; then
  echo "I: Adding pre-loaded packages"
elif apt-get install --yes aptitude mc vim nano- devscripts gitk git sudo \
    locales-all rlwrap eatmydata ccache x11-xserver-utils ; then
  echo "I: Adding pre-loaded packages (missing: imediff fzf)"
else
  echo "E: Failed to add pre-loaded packages."
  echo "   Please resolve manually by logging into $DIST and execute."
  echo
  echo "   $ sudo dpkg --configure -a"
  echo
  exit 1
fi
EOF
}

#############################################################################
DIST="${DIST:-unstable}"
SCHROOT_CMD="shell"

while [ -n "$1" ]; do
  case "$1" in
    -i|--in*)
      SCHROOT_CMD="init"
      ;;
    -p|--pr*)
      SCHROOT_CMD="prep"
      ;;
    -u|--up*)
      SCHROOT_CMD="upgrade"
      ;;
    u)
      DIST="unstable"
      break
      ;;
    t)
      DIST="testing"
      break
      ;;
    s)
      DIST="stable"
      break
      ;;
    o)
      DIST="oldstable"
      break
      ;;
    oo)
      DIST="oldoldstable"
      break
      ;;
    unstable|testing|stable|oldstable|oldoldstable|sid|bookworm|bullseye|buster|strech)
      DIST="${1}"
      break
      ;;
    -h|--help)
      _help
      exit 0
      ;;
    *)
      echo "W: unknown distribution ${1}"
      _help
      exit 0
      ;;
  esac
  shift
done

#echo "I: UID         = $(id -u)"
#echo "I: DIST        = ${DIST}"
#echo "I: SCHROOT_CMD = ${SCHROOT_CMD}"
#echo "I: ----------------------------"

case "$SCHROOT_CMD" in
  in*)
    _su "$DSH" "-i" "$DIST"
    _init
    _upgrade
    _prep
    exit 0
    ;;
  pr*)
    _su "$DSH" "-p" "$DIST"
    _upgrade
    _prep
    exit 0
    ;;
  up*)
    _su "$DSH" "-u" "$DIST"
    _upgrade
    exit 0
    ;;
  sh*)
    trap _noxhost 0
    _distsh
    ;;
esac

