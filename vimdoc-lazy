#!/bin/sh -e
# vimdoc setup under XDG Base Directory Specification
# https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html
# @ NAMES         vim packagenames in ~/.local/share/nvim/lazy/ (list)
# @ -d DOCDIR     vim doc install directory
#set -x
cd >/dev/null || true
HOME=$(pwd)
help () {
  echo "syntax: ${0##*/}"
  echo
  echo "Set up a vimdoc for all packages in ../lnvim/lazy"
}

if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
  help
  exit 0
fi

# source .local/share/nvim/lazy/<packagename>/doc/*.txt
# destination .config/nvim/doc/*.txt

BASE="${XDG_DATA_HOME:-$HOME/.local}/share/nvim/lazy"
#echo "BASE='$BASE'"
PKGNAMES=$(find "$BASE" -maxdepth 1 -type d | sed -e 's,^.*/,,')
# echo "PKGNAMES='$PKGNAMES'"
DESTPATH="${XDG_CONFIG_HOME:-$HOME/.config}/nvim/doc"
mkdir -p "$DESTPATH"
#echo "DESTPATH='$DESTPATH'"

# Pre-existing HELP entries for LazyVim and their package names
#  ... from ~/.local/share/nvim/lazy
# lazy.nvim.txt --> lazy.nvim
# illuminate.txt --> vim-illuminate
# indent_blankline.txt --> indent_blankline.nvim
# todo-comments.nvim.txt --> todo-comments.nvim
# todo-comments.txt --> todo-comments.nvim
# persistence.nvim.txt --> persistence.nvim
# persistence.txt --> persistence.nvim
# trouble.nvim.txt --> trouble.nvim
# trouble.txt --> trouble.nvim
# gitsigns.txt --> gitsigns.nvim
# cmp-nvim-lsp --> cmp-nvim-lsp
# mason-lspconfig-mapping.txt --> mason-lspconfig.nvim
# mason-lspconfig.nvim --> mason-lspconfig.nvim
# mason.nvim --> mason.nvim
# lua-dev.txt --> neodev.nvim
# neodev.nvim.txt --> neodev.nvim
# neodev.txt --> neodev.nvim
# neoconf.nvim.txt --> neoconf.nvim
# lspconfig.txt --> nvim-lspconfig
# nvim-treesitter --> nvim-treesitter
# lualine.txt --> lualine.nvim
# bufferline.nvim --> bufferline.nvim
# noice.nvim.txt --> noice.nvim
# which-key.nvim.txt --> which-key.nvim
# which-key.txt --> which-key.nvim
# nvim-treesitter-textobjects --> nvim-treesitter-textobjects
# alpha.txt --> alpha-nvim
# tokyonight.nvim.txt --> tokyonight.nvim
# tokyonight.txt --> tokyonight.nvim
# LazyVim.txt --> LazyVim

# Installed from Neovim system runtime at /usr/share/nvim/runtime
#  ... from ~/.local/share/nvim/lazy
# matchit.txt --> pack/dist/opt/matchit/doc/matchit.txt

for PKGNAME in $PKGNAMES ; do
  case $PKGNAME in
    LazyVim | \
    alpha-nvim | \
    bufferline.nvim | \
    cmp-nvim-lsp | \
    gitsigns.nvim | \
    indent_blankline.nvim | \
    lazy.nvim | \
    lualine.nvim | \
    mason-lspconfig.nvim | \
    mason.nvim | \
    neoconf.nvim | \
    neodev.nvim | \
    noice.nvim | \
    nvim-lspconfig | \
    nvim-treesitter | \
    nvim-treesitter-textobjects | \
    persistence.nvim | \
    todo-comments.nvim | \
    tokyonight.nvim | \
    trouble.nvim | \
    vim-illuminate | \
    which-key.nvim )
      # already read
      echo "Skip: $PKGNAME (no need)" # do nothing
      ;;
    *)
      #echo "Creating symlink for $PKGNAME"
      BASEPATH="$BASE/$PKGNAME/doc"
      if [ -d "$BASEPATH" ]; then
        TXTFILES=$(find "$BASEPATH" -type f -name '*.txt' | sed 's,^.*/,,')
        #echo " ... TXTFILES='$TXTFILES'"
        for FNAME in $TXTFILES ; do
          if head "$BASE/$PKGNAME/doc/$FNAME" | grep -e '^\*' >/dev/null ; then
            #echo "  ... $FNAME"
            echo "Link: $BASE/$PKGNAME/doc/$FNAME -> $DESTPATH/$FNAME"
            ln -sf "$BASE/$PKGNAME/doc/$FNAME" "$DESTPATH/$FNAME"
          else
            echo "Copy w/ header: $BASE/$PKGNAME/doc/$FNAME -> $DESTPATH/$FNAME"
            echo "*$FNAME*" > "$DESTPATH/$FNAME"
            cat "$BASE/$PKGNAME/doc/$FNAME" >> "$DESTPATH/$FNAME"
          fi
        done
      else
        echo "Skip: $PKGNAME (no doc)"
      fi
  esac
done
echo "Update tags"
nvim "+helptags ALL" "+q"

