#!/bin/sh -e
# Setup initial install (console system)
# Copyright 2017 Osamu Aoki <osamu@debian.org>, GPL-2+
# vim: set ts=2 sts=2 ai et:
#############################################################################
# Set to run as ROOT
if [ $(id -un) != root ]; then
  USERNAME=$(id -un)
  export USERNAME
  if [ -r /etc/sudoers.d/custom ]; then
    sudo "$0"
  else
    echo "Please type the root password"
    su -c "$0"
  fi
  exit
fi
#############################################################################
# The following commands are run under ROOT
# Basic apt set up after the install: Enable contrib + non-free
if grep -q non-free /etc/apt/sources.list || \
   grep -q contrib /etc/apt/sources.list ; then
  echo "Already contrib + non-free enabled"
else
  echo "Enable contrib + non-free"
  sed -i -e 's/main/main contrib non-free/' /etc/apt/sources.list
fi
echo "Debian distribution:"
sed -n -e "s/^deb\s.*\/\s/    /p" /etc/apt/sources.list
#############################################################################
# Update package apt list
apt update
#############################################################################
echo -n "Full-Upgrade? (possibly large download!) "
read YN
YN="${YN:-y}"
if [ "$YN" = "y" ]; then
  # upgrade all the way
  apt full-upgrade
fi
#############################################################################
# Add console programs
#############################################################################
. /etc/os-release # get OS version
# basic packages in case it was skipped
PKGS="sudo aptitude locales-all cryptsetup lvm2"
PKGS="$PKGS task-english"
# editor of choice
PKGS="$PKGS vim emacs vim-tiny- nano- mc ssh screen xz liblz4-tool"
# binary without library dependency
PKGS="$PKGS e3 busybox"
# shell environment of choice
PKGS="$PKGS mc ssh screen"
# security related
PKGS="$PKGS pinentry-curses gnupg scdaemon"
# default-mta
PKGS="$PKGS exim4-daemon-light" 
# Easy GMAIL access for me
PKGS="$PKGS msmtp msmtp-gnome maildrop mutt" 
if [ "$VERSION" = "9 (stretch)" ]; then
PKGS="$PKGS getmail4" 
else
# buster
PKGS="$PKGS getmail" 
fi
# Filesystem tools
PKGS="$PKGS testdisk xfsprogs xorriso btrfs-tools eject"
# memory test
PKGS="$PKGS memtest86+"
# probably installed by installer
#PKGS="$PKGS discover grub-pc console-setup initramfs-tools"
#PKGS="$PKGS usbutils keyboard-configuration laptop-detect"
# firmwares for network drivers (includes non-free ones)
PKGS="$PKGS firmware-linux"
PKGS="$PKGS atmel-firmware"
PKGS="$PKGS bluez-firmware"
PKGS="$PKGS broadcom-sta-dkms"
PKGS="$PKGS firmware-atheros"
PKGS="$PKGS firmware-bnx2"
PKGS="$PKGS firmware-bnx2x"
PKGS="$PKGS firmware-brcm80211"
PKGS="$PKGS firmware-crystalhd"
PKGS="$PKGS firmware-intel-sound"
PKGS="$PKGS firmware-intelwimax"
PKGS="$PKGS firmware-ipw2x00"
PKGS="$PKGS firmware-iwlwifi"
PKGS="$PKGS firmware-libertas"
PKGS="$PKGS firmware-myricom"
PKGS="$PKGS firmware-netxen"
PKGS="$PKGS firmware-qlogic"
PKGS="$PKGS firmware-realtek"
PKGS="$PKGS firmware-ti-connectivity"
PKGS="$PKGS firmware-zd1211"
PKGS="$PKGS amd64-microcode"
PKGS="$PKGS intel-microcode"
PKGS="$PKGS sl-modem-dkms"
apt install $PKGS

#############################################################################
echo "Setting passwordless sudo system"
cat >/etc/sudoers.d/custom <<END
# NO password for the user in sudo group
%sudo ALL=NOPASSWD: ALL
# Alternative setting for post buster
# No password for 8 hours
#Defaults timestamp_timeout = 480
#Defaults timestamp_type = global
END
echo "Enabled passwordless sudo system."
#############################################################################
# Set up normal group membership
adduser $USERNAME sudo
adduser $USERNAME adm
adduser $USERNAME src
adduser $USERNAME staff
adduser $USERNAME games
echo "Reboot system to renew user/firmware"

