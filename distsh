#!/bin/sh -e
# vim:se sw=2 ts=2 sts=2 et ai tw=78:
# convenience script to use schroot
# Set this from command line if needed
DIST="${DIST:-unstable}"
if [ "$(id -u)" != 0 ] && type xhost >/dev/null; then
  XHOST="xhost"
else
  XHOST=":"
fi
# For ease of customization, here are key parameters
DSH="$0"
USERNAME="osamu"
TYPE="${TYPE:-source}"
USAGE="${USAGE:-term}"
ARCH="${ARCH:-amd64}"
BASECHROOT="/srv/chroot" # enough disk space here
PROFILE="osamu" # name for local customized /etc/schroot/chroot.d/desktop
URL="http://127.0.0.1:3142/deb.debian.org/debian"
_help() {
  echo "NAME"
  echo "    ${0##*/} - start a shell in chroot with current home data etc."
  echo
  echo "SYNOPSIS"
  echo "    ${0##*/} [|init|prep|upgrade]"
  echo
  echo "DESCRIPTION"
  echo "    Start persistent (source) chroot with schroot with"
  echo "    current home data based on the \${DIST} environment."
  echo "    If DIST is unset, it defaults to 'unstable'"
  echo
  echo "    If 'init' is given as an argument, this initialize schroot"
  echo "    environment for this command and sbuild."
  echo "      * /srv/chroot/\${DIST}-amd64-sbuild used by sbuild as a minimum system"
  echo "      * /srv/chroot/\${DIST}-amd64-${USAGE} used by this program to start"
  echo "        terminal shell prompt as a source chroot of a loaded system"
  echo
  echo "    If 'prep' is given as an argument, this update schroot"
  echo "    environment with basic extra packages normally needed in"
  echo "    /srv/chroot/\${DIST}-amd64-${USAGE}"
  echo
  echo "    If 'upgrade' is given as an argument, this update schroot"
  echo "    environment"
  echo
}

_noxhost () {
  $XHOST -
  if [ "$XHOST" = "xhost" ]; then
    echo "I: closed xhost just to be sure"
  fi
}
trap _noxhost 0

_distsh () {
  $XHOST -
  echo "I: use ${TYPE}:${DIST}-${ARCH}-${USAGE}"
  $XHOST "+si:localuser:$USERNAME"
  echo "I: allow xhost only for the localuser"
  schroot -c "${TYPE}:${DIST}-${ARCH}-${USAGE}"
  echo "I: normal exit from schroot"
}

_su () {
  if [ "$(id -u)" != 0 ]; then
    exec sudo --preserve-env=DIST "$0" "$1"
  fi
}
_init () {
  echo "I: executing as $(id -u -n) ..."
  # create a minimum schroot for sbuild
  echo "I: setting up DIST=${DIST} for sbuild ..."
  DIRSCHROOT="${BASECHROOT}/${DIST}-${ARCH}-sbuild"
  if [ ! -e "${DIRSCHROOT}" ]; then
    sbuild-createchroot --include=eatmydata,ccache  "${DIST}" "${DIRSCHROOT}" "${URL}"
  else
    echo "W: ${DIRSCHROOT} exists so use it"
  fi
  # create additional chroot for use by terminal and X (No wayland?)
  # $ xhost +si:localuser:osamu ; schroot -c chroot:${DIRTERM}-?? ; xhost -
  echo "I: setting up DIST=${DIST} for term ..."
  DIRTERM="${BASECHROOT}/${DIST}-${ARCH}-term"
  if [ ! -e "${DIRTERM}" ]; then
    cp -a --reflink=always  "${DIRSCHROOT}"  "${DIRTERM}"
  else
    echo "W: ${DIRTERM} exists so use it"
  fi
  # create schroot data entry /etc/schroot/chroot.d/${DIST}-${ARCH}-term
  # while using schroot $PROFILE with uniq filename
  # shellcheck disable=SC2086
  SCHROOTCONF="$(ls -1 /etc/schroot/chroot.d/${DIST}-${ARCH}-term-* 2>/dev/null)"
  if [ -z "$SCHROOTCONF" ]; then
    cat > "/etc/schroot/chroot.d/${DIST}-${ARCH}-term-$$" <<EOF
[${DIST}-${ARCH}-term]
description=Debian ${DIST} ${ARCH} chroot for terminal with shared data
groups=root,sbuild
root-groups=root,sbuild
source-groups=root,sbuild
source-root-groups=root,sbuild
profile=${PROFILE}
type=directory
preserve-environment=true
directory=/srv/chroot/${DIST}-${ARCH}-term
union-type=overlay
command-prefix=eatmydata
EOF
  else
    echo "W: ${SCHROOTCONF} exists so use it"
  fi
}

_upgrade () {
  cat <<EOF | $DSH
# -udcar
apt-get update --yes
apt-get dist-upgrade --yes
apt-get clean --yes
apt-get autoclean --yes
apt-get autoremove --yes
EOF
}

_prep () {
  cat <<EOF | $DSH
apt-get install --yes aptitude mc vim nano- devscripts gitk git sudo \
    locales-all imediff fzf rlwrap eatmydata ccache x11-xserver-utils
EOF
}

#############################################################################
case "$1" in
  i*|-i)
    _su "$1"
    _init
    _upgrade
    _prep
    ;;
  p*|-p)
    _su "$1"
    _upgrade
    _prep
    ;;
  u*|-u)
    _su "$1"
    _upgrade
    ;;
  '')
    _distsh
    ;;
  *)
    _help
    ;;
esac

